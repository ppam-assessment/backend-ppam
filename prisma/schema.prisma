// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  admin
  submitter
  viewer
  blocked
}

enum InstrumentType {
  dropdown
  dropdownya
  dropdownideal
  checkbox
  text
  date
  sub
}

enum accessStatus {
  pending
  approved
  rejected
}

model Users {
  id String @id
  username String @unique
  institute String?
  password String
  email String @unique
  status Status

  session Sessions[]
  response Responses[]
  metadata ResponseMetadata?
  viewerAccess ViewerAccess?
}

model Provinces {
  id Int @id @default(autoincrement())
  name String

  Cities Cities[]
  Responses ResponseMetadata[]
  @@map("Areas")
}

model Cities {
  id Int @id @default(autoincrement())
  provinceId Int
  name String

  province Provinces @relation(fields: [provinceId], references: [id])
}

model Topics {
  id Int @id @default(autoincrement())
  topic String
  part Int

  instrument Instrument[]
}

model ResponseMetadata {
  id Int @id @default(autoincrement())
  provinceId Int?
  city String?
  userId String @unique
  leader String
  date DateTime @default(now())
  participants String

  responder Users @relation(fields: [userId],references: [id])
  province Provinces? @relation(fields: [provinceId], references: [id])
}

model Instrument {
  id Int @id @default(autoincrement())
  mainId Int?
  number Int?
  topicId Int
  question String
  type InstrumentType

  topic Topics @relation(fields: [topicId], references: [id])
  respons Responses[]

  sub Instrument[] @relation("SubInstrument")
  main Instrument? @relation("SubInstrument", fields: [mainId], references: [id])
}

model Responses {
  id Int @id @default(autoincrement())
  userId String
  instrumentId Int
  value String
  score Int
  comment String?

  instrument Instrument @relation(fields: [instrumentId], references: [id])
  responder Users @relation(fields: [userId],references: [id])
}

model Sessions {
  id String @id
  userId String
  token String
  exp DateTime

  user Users @relation(fields: [userId], references: [id])
}

model ViewerAccess {
  id Int @id @default(autoincrement())
  userId String @unique
  status accessStatus @default(pending)
  reason String?
  rejectReason String?
  date DateTime @default(now()) @updatedAt

  viewer Users @relation(fields: [userId], references: [id])
}